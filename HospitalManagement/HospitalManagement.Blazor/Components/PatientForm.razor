@* @page "/patient-form"
@using HospitalManagement.Domain.Entities
@using HospitalManagement.Application.Interfaces
@inject IPatientService patientService
@inject NavigationManager NavigationManager

<h3>Регистрация пациента</h3>

<EditForm Model="@newPatient" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="row">
        <!-- Фотография -->
        <div class="col-md-3">
            <div class="form-group">
                <label>Фото пациента:</label>
                <InputFile OnChange="HandleFileChange" class="form-control" />
            </div>
        </div>

        <!-- Основные данные -->
        <div class="col-md-9">
            <div class="form-group">
                <label>ФИО:</label>
                <InputText id="fullName" class="form-control" @bind-Value="newPatient.FirstName" />
            </div>

            <div class="form-group">
                <label>Номер страхового полиса:</label>
                <InputText id="insurancePolicyNumber" class="form-control" @bind-Value="newPatient.InsurancePolicyNumber" />
            </div>

            <div class="form-group">
                <label>Дата рождения:</label>
                <InputDate id="birthDate" class="form-control" @bind-Value="newPatient.BirthDate" />
            </div>

            <div class="form-group">
                <label>Электронный адрес:</label>
                <InputText id="emailAddress" class="form-control" @bind-Value="newPatient.EmailAddress" />
            </div>

            <div class="form-group">
                <label>Телефонный номер:</label>
                <InputText id="telephoneNumber" class="form-control" @bind-Value="newPatient.TelephoneNumber" />
            </div>

            <div class="form-group">
                <label>Паспортные данные:</label>
                <InputText id="passport" class="form-control" @bind-Value="newPatient.Passport.SeriesNumber" />
            </div>

            <div class="form-group">
                <label>Место работы:</label>
                <InputText id="workplace" class="form-control" @bind-Value="newPatient.Workplace.WorkplaceName" />
            </div>

            <div class="form-group">
                <label>Адрес проживания:</label>
                <InputText id="address" class="form-control" @bind-Value="newPatient.Addresses.First().FullAddress" />
            </div>
        </div>
    </div>

    <div class="form-group">
	    <button type="submit" class="btn btn-primary">Создать пациента</button>
    </div>
    <div class="alert alert-success" role="alert" @if="string.IsNullOrEmpty(successMessage)">
	    @successMessage
    </div>
</EditForm>

@code {
    private Patient newPatient = new Patient { Addresses = new List<Address> { new Address() } };

    private string successMessage = string.Empty; // Для отображения сообщения об успехе

    private async Task HandleValidSubmit()
    {
	    try
	    {
		    // Попытка создать пациента
		    await patientService.CreatePatientAsync(newPatient);
		    successMessage = "Пациент успешно добавлен!"; // Устанавливаем сообщение об успехе
	    }
	    catch (Exception ex)
	    {
		    successMessage = $"Ошибка: {ex.Message}"; // В случае ошибки выводим сообщение
	    }
    }


    private void HandleFileChange(InputFileChangeEventArgs e)
    {
        // Логика для обработки фото пациента
    }

} *@